name: Deploy to prod
on:
  push:
concurrency:
  group: "actiontests-prod"
jobs:
  prepare-release-log:
    name: Generate commit messages since last tagged release
    runs-on: ubuntu-latest
    outputs:
      commit_message: ${{ steps.generate_message.outputs.commit_message }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Generate commit messages since last tagged commit
        id: 'generate_message'
        run: |
          promotedImageCommitHash=3c24d9c65ba99917d56411e0be84f06d3f5743a4
          echo "| Commit | Author | Message |" >> $GITHUB_STEP_SUMMARY
          echo "| ------ | ------ | ------- |" >> $GITHUB_STEP_SUMMARY
          git log --pretty=format:"| %h | %an | %s |" 408264b24edae4bb3c24eaa73f7fcd3968981bfa..$promotedImageCommitHash >> $GITHUB_STEP_SUMMARY
          
          echo "commit_message<<EOF" >> $GITHUB_OUTPUT
          echo "| Commit | Author | Message |" >> $GITHUB_OUTPUT
          echo "| ------ | ------ | ------- |" >> $GITHUB_OUTPUT
          echo "$(git log --pretty=format:"%h%x09%an%x09%s" 408264b24edae4bb3c24eaa73f7fcd3968981bfa..$promotedImageCommitHash)" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
  slackNotification:
    name: Slack Notification
    runs-on: ubuntu-latest
    needs: prepare-release-log
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: ${{ needs.prepare-release-log.outputs.commit_message }}
  
